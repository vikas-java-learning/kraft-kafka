
services:
  kafka-gen:
    image: confluentinc/cp-kafka:7.8.0
    hostname: kafka-gen
    container_name: kafka-gen
    volumes:
      - ./scripts/create_cluster_id.sh:/tmp/create_cluster_id.sh
      - ./clusterID:/tmp/clusterID
    command: "bash -c '/tmp/create_cluster_id.sh'"

  cntrl1:
    image: confluentinc/cp-kafka:7.8.0
    restart: always
    hostname: cntrl1
    container_name: cntrl1
    environment:
        KAFKA_NODE_ID: 1
        KAFKA_PROCESS_ROLES: controller
        KAFKA_CONTROLLER_QUORUM_VOTERS: 1@cntrl1:9093,2@cntrl2:9093,3@cntrl3:9093
        KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
        KAFKA_LISTENERS: CONTROLLER://cntrl1:9093
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT
        KAFKA_METADATA_LOG_DIR: /var/lib/kafka/data
        KAFKA_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/kafka/custom-log4j.properties"
    volumes:
      - cntrl1-logs:/data
      - ./scripts/update_run.sh:/tmp/update_run.sh
      - ./clusterID:/tmp/clusterID
      - ./kafka-config/log4j.properties:/etc/kafka/custom-log4j.properties
    command: "bash -c '/tmp/update_run.sh'"

  cntrl2:
    image: confluentinc/cp-kafka:7.8.0
    restart: always
    hostname: cntrl2
    container_name: cntrl2
    environment:
        KAFKA_NODE_ID: 2
        KAFKA_PROCESS_ROLES: controller
        KAFKA_CONTROLLER_QUORUM_VOTERS: 1@cntrl1:9093,2@cntrl2:9093,3@cntrl3:9093
        KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
        KAFKA_LISTENERS: CONTROLLER://cntrl2:9093
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT
        KAFKA_METADATA_LOG_DIR: /var/lib/kafka/data
        KAFKA_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/kafka/custom-log4j.properties"
    volumes:
      - cntrl2-logs:/data
      - ./scripts/update_run.sh:/tmp/update_run.sh
      - ./clusterID:/tmp/clusterID
      - ./kafka-config/log4j.properties:/etc/kafka/custom-log4j.properties
    command: "bash -c '/tmp/update_run.sh'"

  cntrl3:
    image: confluentinc/cp-kafka:7.8.0
    restart: always
    hostname: cntrl3
    container_name: cntrl3
    environment:
        KAFKA_NODE_ID: 3
        KAFKA_PROCESS_ROLES: controller
        KAFKA_CONTROLLER_QUORUM_VOTERS: 1@cntrl1:9093,2@cntrl2:9093,3@cntrl3:9093
        KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
        KAFKA_LISTENERS: CONTROLLER://cntrl3:9093
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT
        KAFKA_METADATA_LOG_DIR: /var/lib/kafka/data
        KAFKA_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/kafka/custom-log4j.properties"
    volumes:
      - cntrl3-logs:/data
      - ./scripts/update_run.sh:/tmp/update_run.sh
      - ./clusterID:/tmp/clusterID
      - ./kafka-config/log4j.properties:/etc/kafka/custom-log4j.properties
    command: "bash -c '/tmp/update_run.sh'"

  kafka1:
    image: confluentinc/cp-kafka:7.8.0
    hostname: kafka1
    container_name: kafka1
    environment:
      KAFKA_NODE_ID: 4
      KAFKA_PROCESS_ROLES: broker
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@cntrl1:9093,2@cntrl2:9093,3@cntrl3:9093
      KAFKA_LISTENERS: BROKER://0.0.0.0:19092
      KAFKA_ADVERTISED_LISTENERS: BROKER://kafka1:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: BROKER:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/kafka/custom-log4j.properties"
    volumes:
      - kafka1-data:/var/lib/kafka/data
      - ./jmx_exporter:/usr/app/jmx_exporter/
      - ./scripts/update_run.sh:/tmp/update_run.sh
      - ./clusterID:/tmp/clusterID
      - ./kafka-config/log4j.properties:/etc/kafka/custom-log4j.properties
    command: "bash -c '/tmp/update_run.sh'"
    depends_on:
      - cntrl1
      - cntrl2
      - cntrl3

  kafka2:
    image: confluentinc/cp-kafka:7.8.0
    hostname: kafka2
    container_name: kafka2
    environment:
      KAFKA_NODE_ID: 5
      KAFKA_PROCESS_ROLES: broker
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@cntrl1:9093,2@cntrl2:9093,3@cntrl3:9093
      KAFKA_LISTENERS: BROKER://0.0.0.0:19093
      KAFKA_ADVERTISED_LISTENERS: BROKER://kafka2:19093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: BROKER:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/kafka/custom-log4j.properties"
    volumes:
      - kafka2-data:/var/lib/kafka/data
      - ./jmx_exporter:/usr/app/jmx_exporter/
      - ./scripts/update_run.sh:/tmp/update_run.sh
      - ./clusterID:/tmp/clusterID
      - ./kafka-config/log4j.properties:/etc/kafka/custom-log4j.properties
    command: "bash -c '/tmp/update_run.sh'"
    depends_on:
      - cntrl1
      - cntrl2
      - cntrl3

  kafka3:
    image: confluentinc/cp-kafka:7.8.0
    hostname: kafka3
    container_name: kafka3
    environment:
      KAFKA_NODE_ID: 6
      KAFKA_PROCESS_ROLES: broker
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@cntrl1:9093,2@cntrl2:9093,3@cntrl3:9093
      KAFKA_LISTENERS: BROKER://0.0.0.0:19094
      KAFKA_ADVERTISED_LISTENERS: BROKER://kafka3:19094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: BROKER:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/kafka/custom-log4j.properties"
    volumes:
      - kafka3-data:/var/lib/kafka/data
      - ./jmx_exporter:/usr/app/jmx_exporter/
      - ./scripts/update_run.sh:/tmp/update_run.sh
      - ./clusterID:/tmp/clusterID
      - ./kafka-config/log4j.properties:/etc/kafka/custom-log4j.properties
    command: "bash -c '/tmp/update_run.sh'"
    depends_on:
      - cntrl1
      - cntrl2
      - cntrl3

  akhq:
    image: tchiotludo/akhq:0.22.0
    container_name: akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka1:19092,kafka2:19093,kafka3:19094"
    ports:
      - 8180:8080

  kafka-kraft-app:
    build: .
    container_name: kafka-kraft-app
    ports:
      - "8080:8080"

volumes:
  cntrl1-logs:
  cntrl2-logs:
  cntrl3-logs:
  kafka1-data:
  kafka2-data:
  kafka3-data:
